/*
  Flexible Box
  For Parent
  - display: flex => To Start Flexible Box
  - flex-direction: row => Default Value
  - flex-wrap: nowrap => Default Value
  - flex-flow: [Flex-Direction] + [Flex-Wrap]
  - justify-content: flex-start => Default Value
  - align-items: stretch => Default Value
  - align-content: stretch => Default Value
  For Child
  - flex-grow: 0 => Default Value
  - flex-shrink: 1 => Default Value
  - order: 0 => Default Value
  - flex-basis: auto => Default Value
  - flex: [Flex Grow] [Flex Shrink] [Flex Basis] 0 1 Auto
  - Display : inline-flex

*/

* {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
.flex {
    background-color: #eee;
    width: 800px;
    padding: 20px;
    margin: 20px auto;
    display: flex;
    display: inline-flex;/*to make two flexes parent inline*/
}
.flex div {
    background-color: #f00;
    color: white;
    width: 80px;
    text-align: center;
    padding: 20px;
    margin-right: 5px;
    flex-grow: 1;/*you can make a child grow more than the other*/
    flex-shrink: 0;/*opposite of flex-shrink*/
    flex-basis:300px;/*if the flex-direction row so the flex basis effect on the element width otherwise the flex direction is column it affects on the height*/
    /*benefits of flex-basis => if i had elements in row order and one element has a more width than others and i want to switch the order from row to column the flex-basis convert teh extra width into extra height automatically*/
    /*flex-basis doesnt affect on the absolute elements position*/
    /*flex-basis respect max-width*/
    flex: 0 1 auto ;/*flex-grow flex-shrink flex-basis 0 1 Auto*/
}